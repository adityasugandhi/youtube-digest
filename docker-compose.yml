version: '3.8'

services:
  # Automation Service (YouTube Summarization Pipeline with Qdrant)
  automation-service:
    build:
      context: ./services/automation
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    env_file:
      - .env
    environment:
      - DEBUG=true
      - LOG_LEVEL=INFO
      - ENVIRONMENT=development
      - HOST=0.0.0.0
      - PORT=8003
      - QDRANT_HOST=host.docker.internal
      - QDRANT_PORT=6333
      - COLLECTION_YT=youtube_transcripts
      - EMBED_MODEL=intfloat/e5-base-v2
      - RUN_ON_STARTUP=false
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./services/automation:/app
      - automation_data:/app/data
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=youtube_digest
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d youtube_digest"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

# Note: Using external Qdrant container running on host
  # Qdrant vector database is running externally on localhost:6333

  # NGINX API Gateway
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infrastructure/docker/nginx/proxy_params:/etc/nginx/proxy_params:ro
      - ./infrastructure/docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - automation-service
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  automation_data:

networks:
  app-network:
    driver: bridge